/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package keystrokelogin;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.neuroph.core.NeuralNetwork;
import org.neuroph.core.data.DataSet;
import org.neuroph.core.data.DataSetRow;
import org.neuroph.nnet.Perceptron;

/**
 *
 * @author aluno
 */
public class GetData extends javax.swing.JFrame {

    private long timestamp1 =0;
    private long timestamp2 =0;
    private boolean correto;
    ArrayList<Long> time_diff = new ArrayList<Long>();
    ArrayList<Senha> senhas = new ArrayList<Senha>();
    String senhaStr = "&";
    
    /**
     * Creates new form GetData
     */
    public GetData() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        gerarButton = new javax.swing.JButton();
        passwordTextField = new javax.swing.JTextField();
        cadastrarButton = new javax.swing.JButton();
        verificarButton = new javax.swing.JButton();
        check_correto = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));

        gerarButton.setText("Gerar");
        gerarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerarButtonActionPerformed(evt);
            }
        });

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });
        passwordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextFieldKeyReleased(evt);
            }
        });

        cadastrarButton.setText("Cadastrar");
        cadastrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarButtonActionPerformed(evt);
            }
        });

        verificarButton.setText("Verificação");
        verificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verificarButtonActionPerformed(evt);
            }
        });

        check_correto.setText("correto?");
        check_correto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_corretoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addComponent(cadastrarButton)
                        .addGap(30, 30, 30)
                        .addComponent(gerarButton)
                        .addGap(29, 29, 29)
                        .addComponent(verificarButton)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(check_correto))
                    .addComponent(passwordTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(check_correto)
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadastrarButton)
                    .addComponent(gerarButton)
                    .addComponent(verificarButton))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gerarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerarButtonActionPerformed
        //Gerar resultados falsos para ter uma base de dados maior
        //...TODO
        
        gerarRNA();
                
    }//GEN-LAST:event_gerarButtonActionPerformed

    private void gerarRNA(){
        int numEntradas = senhaStr.length()-1; //intervalos de tempo entre as teclas
        System.out.println("size:  "+(senhaStr.length()-1));
        double[] entradaAux = new double[numEntradas]; //entrada auxiliar para setar training set (trainingset só aceita double)
        double[] saidaAux = new double[1]; // saida auxiliar para training set
        
        // create new perceptron network 
        NeuralNetwork neuralNetwork = new Perceptron(numEntradas, 1); //saída igual a 1, senha correta ou não
        // create training set 
        DataSet trainingSet = new  DataSet(numEntradas, 1); 
        // add training data to training set (logical OR function) 
        for (int i = 0; i < senhas.size(); i++) {
            for (int j = 0; j < entradaAux.length; j++) { //loop para pegar os tempos da senha
                entradaAux[j] = (double)senhas.get(i).getTime(j);
            }
            if(senhas.get(i).isCorrect()) saidaAux[0] = 1;
            else saidaAux[0] = 0;
            
            trainingSet.addRow(new DataSetRow(entradaAux, saidaAux));
        }
        
        /*trainingSet.addRow (new DataSetRow (new double[]{0, 0}, new double[]{0})); 
        trainingSet.addRow (new DataSetRow (new double[]{0, 1}, new double[]{1})); 
        trainingSet.addRow (new DataSetRow (new double[]{1, 0}, new double[]{1})); 
        trainingSet.addRow (new DataSetRow (new double[]{1, 1}, new double[]{1})); */
        // learn the training set 
        neuralNetwork.learn(trainingSet); 
        // save the trained network into file 
        neuralNetwork.save("perceptron.nnet"); 
    }
    
    private void cadastrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarButtonActionPerformed
        cadastrar(); //muda esse metodo, pq ele é chamado quando o enter é pressionado tbm
    }//GEN-LAST:event_cadastrarButtonActionPerformed

    private void cadastrar(){
        if(senhaStr.compareTo("&")==0){ //registra a primeira senha digitada, que será a senha do sistema
            senhaStr = passwordTextField.getText();
            System.out.println("senha será: "+senhaStr);
        }
        senhas.add(new Senha(senhaStr, time_diff, correto));
        System.out.println("> "+senhaStr+" : "+time_diff);
        passwordTextField.setText("");
        time_diff = new ArrayList<Long>();
        timestamp1 = 0;
        timestamp2 = 0;
    }
    
    private void passwordTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextFieldKeyReleased
        Date date = new Date();
	
        if(evt.getKeyCode()!=java.awt.event.KeyEvent.VK_ENTER){
            if(timestamp1 == 0) timestamp1 = date.getTime(); 
            else if(timestamp1!=0){
                timestamp2 = date.getTime();         
                long diff = timestamp2  - timestamp1 ;
                time_diff.add(diff);
                System.out.println(diff);
                timestamp1 = timestamp2;
            }
        }
    }//GEN-LAST:event_passwordTextFieldKeyReleased

    private void passwordTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextFieldKeyPressed
        /*Date date = new Date();
				
        timestamp2 = date.getTime();
        
        if(timestamp1 != 0){
           long diff = timestamp2  - timestamp1 ;
           time_diff.add(diff);
           System.out.println(diff);
        }*/
    }//GEN-LAST:event_passwordTextFieldKeyPressed

    private void check_corretoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_corretoActionPerformed
        correto = !correto;
    }//GEN-LAST:event_check_corretoActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        cadastrar();
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void verificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verificarButtonActionPerformed
        gerarRNA();
        Verification verficarJframe = new Verification();
        verficarJframe.setVisible(true);
    }//GEN-LAST:event_verificarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GetData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GetData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GetData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GetData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GetData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarButton;
    private javax.swing.JCheckBox check_correto;
    private javax.swing.JButton gerarButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JButton verificarButton;
    // End of variables declaration//GEN-END:variables
}
